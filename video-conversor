#!/bin/bash

# Converts video files to MP4 and WEBM with 2 passes variable bitrate using FFmpeg
# (MP4 conversion is H264 quicktime compatible)
# - docs: https://trac.ffmpeg.org/wiki/Encode/VP9 / https://trac.ffmpeg.org/wiki/Encode/H.264
# - author: @ma77os - Andr√© Mattos
# - https://github.com/ma77os/video-conversor

# TODO: 
# - validade parameters before start
# - watch subfolders recursively
# - add FPS parameter
# - add JPG or PNG output parameter
# - add dimension parameter


usage(){

cat << EOF
    Usage: video-conversor <[-a -b:<value> -i:<format> -o:<format> -h ]>
    Options:
            -a              Converts video without audio.
            -b:<value>      Sets the desired bitrate. Default is 3000k
            -i:<format>     Specify the input video extension. Default is .mov
            -o:<format>     Specity the output video format, use mp4, webm or both. Default is both.
            -h              Show this message
EOF

exit 1

}

# vars
audio_option=''
bitrate='3000k'
input_format='mov'
output_format='all'
str_converted=''
platform='unknown'
unamestr=`uname`

# check platform
if [[ "$unamestr" == 'Linux' ]]; then
   platform='linux'
elif [[ "$unamestr" == 'Darwin' ]]; then
   platform='darvin'
fi

# check parameters
while getopts ab:i:o:h PARAM; do
    case "${PARAM}" in
    a) audio_option='-an' ;;
    b) bitrate="${OPTARG}" ;;
    i) input_format="${OPTARG}" ;;
    o) output_format="${OPTARG}" ;;
    h) usage;;
    esac
done


# check if Homebrew is installed, if not, abort
if [ $platform == 'darvin' ]  && ! [ -x "$(command -v brew)" ]; then
    echo "Homebrew is not installed, please go to https://brew.sh/"
    exit 1
fi

# install ffmpeg first via Homebrew if doesn't exists
if [ $platform == 'darvin' ]  &&  ! [ -x "$(command -v ffmpeg)" ]; then
  brew install ffmpeg \
    --with-tools \
    --with-fdk-aac \
    --with-freetype \
    --with-fontconfig \
    --with-libass \
    --with-libvorbis \
    --with-libvpx \
    --with-opus \
    --with-x265
fi

if [ $platform == 'linux' ]  &&  ! [ -x "$(command -v ffmpeg)" ]; then
    sudo apt-get install ffmpeg
fi

# convert input files to MP4
if [ $output_format == "all" ] || [ $output_format == "mp4" ]; then

    str_converted='_converted'

    for i in ./*.$input_format; do 
        # (command yes to avoid overwrite prompts)
        # h264 pass 1
        yes | ffmpeg -y -i "$i" -c:v libx264 -pix_fmt yuv420p -b:v $bitrate -pass 1 -f mp4 /dev/null && \
        # h264 pass 2
        yes | ffmpeg -i "$i" -c:v libx264 -pix_fmt yuv420p $audio_option -b:v $bitrate -pass 2 "${i%.*}_converted.mp4"
    done

fi

# convert MP4_converted to WEBM
if [ $output_format == "all" ] || [ $output_format == "webm" ]; then

    for i in ./*$str_converted.mp4; do 
        # webm pass 1
        yes | ffmpeg -i "$i" -c:v libvpx-vp9 -b:v $bitrate -pass 1 -speed 4 -f webm /dev/null && \
        # webm pass 2
        yes | ffmpeg -i "$i" -c:v libvpx-vp9 -b:v $bitrate -pass 2 -speed 1 "${i%.*}.webm"
        
    done

fi

# deleting *.log files generated by ffmpeg 2nd pass
find . -maxdepth 1 -name "*ffmpeg2pass*" -delete

if [ $platform == 'darvin' ]; then
  say finished conversion
fi


exit 0
